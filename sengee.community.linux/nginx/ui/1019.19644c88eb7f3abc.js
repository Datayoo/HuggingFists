"use strict";(self.webpackChunksengee_ui=self.webpackChunksengee_ui||[]).push([[1019],{31962:(R,$,d)=>{d.d($,{e:()=>N});var _=d(57781),T=d(16817),y=d(40390);let N=(()=>{class c{constructor(){this.scope="",this.svgDasharray="none",this.svgEndCircle={x:0,y:0},this._setGroupEnable=!1,this.setWeightEnable=!1,this.jsonData={}}get setGroupEnable(){return this._setGroupEnable}set setGroupEnable(a){this._setGroupEnable=a,!a&&(this.setWeightEnable=!1)}get svgClass(){return this.mouseoverFlag?c.SVG_HIGHLIGHT_CLASS:c.SVG_NORMAL_CLASS}destroy(){this.from=this.to=this.controlPoints=this.jsonData=this._flowNode=null}initWithFlowPort(a,s){return a.portType===y._.TYPE_IN_PORT&&a.parentFlag===y._.PARENT_FNODE||a.portType===y._.TYPE_OUT_PORT&&a.parentFlag===y._.PARENT_CONTAINER||a.portType===y._.TYPE_TRIGGER_IN_PORT?(this.from=s,this.to=a):(this.from=a,this.to=s),(this.from.portType===y._.TYPE_TRIGGER_IN_PORT||this.from.portType===y._.TYPE_TRIGGER_OUT_PORT)&&(this.svgDasharray=c.SVG_DASHARRAY_TRIGGER),this.from.numConnection++,this.from.flowNode.newFlowPort(this.from),this.to.numConnection++,this.to.flowNode.newFlowPort(this.to),this.updateJsonData(),this}updateOtherInfo(a){return this.group=a.group||a.$_group||"",this.weight=a.weight||a.$_weight||"",this.scope=a.scope||a.$_scope||"",this.checked=a.checked||a.$_checked||"",this}updateJsonData(){let a=this.from.flowNode==this.flowNode?T.j.PARENT:this.from.flowNode.id;this.jsonData.from=`${a}.${this.from.name}`,a=this.to.flowNode==this.flowNode?T.j.PARENT:this.to.flowNode.id,this.jsonData.to=`${a}.${this.to.name}`}get xml(){let a=this.from.flowNode==this.flowNode?T.j.PARENT:this.from.flowNode.id,s=this.to.flowNode==this.flowNode?T.j.PARENT:this.to.flowNode.id,P=this.group?` group="${this.group}"`:"",A=this.weight?` weight="${this.weight}"`:"",u="";return this.controlPoints&&this.controlPoints.map(t=>{u+=`<controlpoint x="${t.x}" y="${t.y}" visible="${t.visible}" percentage="${t.percentage}"/>`}),`<connection from="${a}.${this.from.name}" to="${s}.${this.to.name}"${P}${A}${this.scope?' scope="Def"':""}${this.checked?' checked="true"':""}>${u}</connection>`}get flowNode(){return this._flowNode}set flowNode(a){this._flowNode=a,this.updateJsonData()}mouseover(){this.mouseoverFlag=!0}mouseout(){this.mouseoverFlag=!1}initControlP(a){return a.controlpoint?(Array.isArray(a.controlpoint)||(a.controlpoint=[a.controlpoint]),a.controlpoint.map(s=>{this.controlPoints=[{x:Number(s.$_x),y:Number(s.$_y),visible:(0,_.sw)(s.$_visible),percentage:s.$_percentage}]}),this):this}addControlP(a){if(this.controlPoints)return this.controlPoints[0].visible=!0,void(this.controlPoints=[...this.controlPoints]);this.controlPoints=[{x:this.from.globalX+(this.to.globalX-this.from.globalX)/2,y:this.from.globalY+(this.to.globalY-this.from.globalY)/2,visible:!0,percentage:.5}],this.drawPath()}updateControlP(a=0,s=0){let P=this.controlPoints[0];if("h"===P.flag){if(s<10)return;P.y=s,P.percentage=Math.abs(P.y-this.from.globalY)/Math.abs(this.to.globalY-this.from.globalY)}else{if(a<this.from.globalX+20||a>this.to.globalX-20)return;P.x=a,P.percentage=Math.abs(P.x-this.from.globalX)/Math.abs(this.to.globalX-this.from.globalX)}this.drawPath()}updateControlPByNode(){let a=this.controlPoints[0];"h"===a.flag?a.y<this.from.globalY&&a.y<this.to.globalY||a.y>this.from.globalY&&a.y>this.to.globalY?a.x=this.from.globalX+.5*(this.to.globalX-this.from.globalX):(a.x=this.from.globalX+.5*(this.to.globalX-this.from.globalX),a.y=this.from.globalY+(this.to.globalY-this.from.globalY)*a.percentage):(a.x=this.from.globalX+(this.to.globalX-this.from.globalX)*a.percentage,a.y=this.from.globalY+.5*(this.to.globalY-this.from.globalY))}removeControlP(a){this.controlPoints=null,this.drawPath()}drawPath(a=0,s=0,P=0,A=0,u="",g=!1,O=!1){let t,r,e,i;if(u?(e={x:a,y:s},i={x:P,y:A},g?(t=i)&&(r=e):(t=e)&&(r=i),this.svgEndCircle.x=P,this.svgEndCircle.y=A):(t={x:this.from.globalX,y:this.from.globalY},r={x:this.to.globalX,y:this.to.globalY}),isNaN(t.x)||isNaN(t.y)||isNaN(r.x)||isNaN(r.y))return;let o_x=t.x+(r.x-t.x)/2,o_y=t.y+(r.y-t.y)/2,l=3;if(180*Math.abs(Math.atan((r.y-t.y)/(r.x-t.x)))/Math.PI<=15&&(l=2),r.x<=t.x&&(l=5),this.controlPoints&&(l=6),2===l)this.svgPath=`M${t.x} ${t.y} \n        S${(o_x+t.x)/2} ${t.y} ${o_x} ${o_y}\n        S${(o_x+r.x)/2} ${r.y} ${r.x} ${r.y}`;else if(3===l)this.svgPath=`M${t.x} ${t.y} \n        C${o_x} ${t.y} ${o_x} ${t.y} ${o_x} ${o_y}\n        C${o_x} ${r.y} ${o_x} ${r.y} ${r.x} ${r.y}`;else if(5===l){let n=20,h=t.x+n,w=r.x-n;this.svgPath=`M${t.x} ${t.y} \n        C${h} ${t.y} ${h} ${t.y} ${h} ${(o_y+t.y)/2}\n        C${h} ${o_y} ${h} ${o_y} ${o_x} ${o_y}\n        C${w} ${o_y} ${w} ${o_y} ${w} ${(o_y+r.y)/2}\n        C${w} ${r.y} ${w} ${r.y} ${r.x} ${r.y}`}else if(6===l){O&&this.updateControlPByNode();let n=t.x+20,h=this.controlPoints[0],p=r.x-20;r.x<=t.x?(this.svgPath=`M${t.x} ${t.y} \n          L${n-16} ${t.y}\n          C${n-16} ${t.y} ${n} ${t.y} ${n} ${t.y+16*(h.y>t.y?1:-1)}\n          L${n} ${h.y+16*(h.y>t.y?-1:1)}\n          C${n} ${h.y+16*(h.y>t.y?-1:1)} ${n} ${h.y} ${n-16} ${h.y}\n          L${p+16} ${h.y}\n          C${p+16} ${h.y} ${p} ${h.y} ${p} ${h.y+16*(h.y>r.y?-1:1)}\n          L${p} ${r.y+16*(h.y>r.y?1:-1)}\n          C${p} ${r.y+16*(h.y>r.y?1:-1)} ${p} ${r.y} ${p+16} ${r.y}\n          L${r.x} ${r.y}`,"h"!==h.flag&&(h.percentage=.5),h.flag="h"):(this.svgPath=`M${t.x} ${t.y} \n          L${h.x-16} ${t.y}\n          C${h.x-16} ${t.y} ${h.x} ${t.y} ${h.x} ${t.y+16*(h.y>t.y?1:-1)}\n          L${h.x} ${r.y+16*(h.y>r.y?1:-1)}\n          C${h.x} ${r.y+16*(h.y>r.y?1:-1)} ${h.x} ${r.y} ${h.x+16} ${r.y}\n          L${r.x} ${r.y}`,"v"!==h.flag&&(h.percentage=.5),h.flag="v")}}}return c.SVG_DEBUG_CLASS="debug",c.SVG_NORMAL_CLASS="normal",c.SVG_HIGHLIGHT_CLASS="highlight",c.SVG_DASHARRAY_NONE="none",c.SVG_DASHARRAY_TRIGGER="8,5,3,5",c.SVG_DASHARRAY_TRIGGER1="2,4",c})()},70487:(R,$,d)=>{d.d($,{k:()=>N});var _=d(57781),T=d(91139),y=d(94865);class N{constructor(){this.lattice=y.g,this.atom=!0}get cx(){return this.x+this.width/2}get cy(){return this.y+this.height/2}get jsonData(){return{id:this.id,name:this.name,x:this.x,y:this.y,width:this.width,height:this.height,parameters:this.parameters}}get graphXml(){var m;const a=this.lattice===y.g?"":` lattice="${this.lattice}"`;return`<fcomment id="${this.id}" name="${this.name}" x="${Math.round(this.x)}" y="${Math.round(this.y)}" width="${Math.round(this.width)}" height="${Math.round(this.height)}"${a}>${(null===(m=this.parameters)||void 0===m?void 0:m.getXml(!1))||""}</fcomment>`}initWithJsonData(m,a=!1){return this.id=m.id||m.$_id||(0,_.Vj)(),this.name=m.name||m.$_name,this.alias=this.name,this.x=Number(m.x||m.$_x)||100,this.y=Number(m.y||m.$_y)||100,this.width=Number(m.width||m.$_width)||200,this.height=Number(m.height||m.$_height)||200,this.lattice=m.lattice||m.$_lattice||y.g,m.parameters&&(this.parameters=T.n.parseParameters(m.parameters,this.id,a)),this}destroy(){}}},16817:(R,$,d)=>{d.d($,{j:()=>u});var _=d(57781),T=d(46055),y=d(64203),N=d(5156),c=d(91139),m=d(31962),a=d(70487),s=d(40390);class P extends s._{constructor(){super(...arguments),this.width=4,this.height=10}get globalX(){return this.portType===s._.TYPE_TRIGGER_IN_PORT?this.flowNode.x-this.flowNode.innerWidth/2:this.flowNode.x+this.flowNode.innerWidth/2}get globalY(){return this.flowNode.y-this.flowNode.innerHeight/2+10}}var A=d(94865);let u=(()=>{class g{constructor(t=0){this.latticeArr=[],this.level=0,this.blink=!1,this.pColor=g.P_Color,this.pColor0=g.P_Color,this.bgColor=g.Bg_Color,this.normalBgColor=g.Bg_Color,this.selectedColor=g.Selected_Color,this.width=100,this.height=100,this.innerWidth=80,this.innerX=10,this.innerY=10,this.inportArr=[],this.outportArr=[],this.triggerInportArr=[],this.triggerOutportArr=[],this.mappingKNameVFlowPort={},this.subFlowNodeArr=[],this.parentFlowNode=null,this.connectionArr=[],this.commentArr=[],this.tagArr=[],this.level=t,this.initTriggerPort()}get type(){return this._type}set type(t){if(this._type=t,this.pColor=N.M6[this._type]||g.P_Color,this.pColor0=(0,_.PS)(this.pColor,.4),this.error)this.bgColor=this.normalBgColor="rgba(255,0,0,0.1)",this.selectedColor="rgba(255,0,0,0.4)";else{const r=(0,_.Nz)(this.pColor,"array");this.bgColor=this.normalBgColor=`hsl(${r[0]}, ${r[1]}%, 95%)`,this.selectedColor=`hsl(${r[0]}, ${r[1]}%, 85%)`}}get visible(){var t;return this.level===(null===(t=this.flowService)||void 0===t?void 0:t.currentLevel)}get error(){var t;return null===(t=this.flowService)||void 0===t?void 0:t.errorNodeIds.find(r=>r.id===this.id)}get innerHeight(){const t=Math.max(this.inportArr.length,this.outportArr.length);return t<=3?80:20*(t-3)+80}get outArr(){return this.outportArr.filter(t=>t.isOut)}get resultArr(){return this.outportArr.filter(t=>t.isResult)}get jsonData(){return{id:this.id,name:this.name,alias:this.alias||this.name,version:this.version,breaker:this.breaker,atom:this.atom,replica:this.replica,x:this.x||0,y:this.y||0,lattice:this.lattice,lattices:this.latticeArr&&this.latticeArr.length>1?this.latticeArr.map(t=>t.name).join(","):"",parameters:this.parameters,inport:this.inportArr.map(t=>t.jsonData),outport:this.outportArr.map(t=>t.jsonData),fnode:this.subFlowNodeArr.map(t=>t.jsonData),connect:this.connectionArr.map(t=>t.jsonData),fcomment:this.commentArr.map(t=>t.jsonData),tags:this.tagArr}}get graphXml(){let t=this.parameters?this.parameters.getXml():"",r="";this.inportArr.map(p=>{r+=p.xml});let e="";this.outportArr.map(p=>{e+=p.xml});let i="";this.subFlowNodeArr.map(p=>{i+=p.graphXml});let o="";this.connectionArr.map(p=>{o+=p.xml});let f="";this.commentArr.map(p=>{f+=p.graphXml});let l="";this.tagArr&&this.tagArr.length&&(l="<tags>",this.tagArr.map(p=>{l+=`<tag name="${p.name}" value="${p.value}" />`}),l+="</tags>");let n=this.lattice!==A.g?` lattice="${this.lattice}"`:"",h=this.latticeArr&&this.latticeArr.length>1?` lattices="${this.latticeArr.map(p=>p.name).join(",")}"`:"";return`<fnode id="${this.id}" name="${this.name}" alias="${this.alias||this.name}" atom="${this.atom}" x="${Math.round(this.x)||0}" y="${Math.round(this.y)||0}" replica="${this.replica}"${h}${n}>${t}${r}${e}${i}${o}${f}${l}</fnode>`}get formatXml(){return(0,_.t6)(this.graphXml)}destroy(){this.inportArr.map(t=>t.destroy()),this.outportArr.map(t=>t.destroy()),this.subFlowNodeArr.map(t=>t.destroy()),this.connectionArr.map(t=>t.destroy()),this.commentArr.map(t=>t.destroy()),this.latticeArr.map(t=>t.destroy()),this.parameters=this.flowService=this.inportArr=this.outportArr=this.mappingKNameVFlowPort=this.connectionArr=this.commentArr=this.latticeArr=null}setFlowService(t){return this.flowService=t,this}initTriggerPort(){this.addFlowPort((new P).initWithJsonData({name:s._.TYPE_TRIGGER_IN_PORT,portType:s._.TYPE_TRIGGER_IN_PORT})),this.addFlowPort((new P).initWithJsonData({name:s._.TYPE_TRIGGER_OUT_PORT,portType:s._.TYPE_TRIGGER_OUT_PORT}))}initWithJsonData(t){if(!t)return this;this.id=t.id||t.$_id||(0,_.Vj)(),this.name=t.name||t.$_name,this.alias=t.alias||t.$_alias||this.name,this.version=t.version,this.breaker=t.breaker,this.atom=(0,_.or)((0,_.or)(t.atom,t.$_atom),!0),this.replica=Number(t.replica||t.$_replica||1),("ProcessOperator"===this.name||"ProcessReference"===this.name)&&(this.atom=!1),this.x=Number(t.x||t.$_x)||130,this.y=Number(t.y||t.$_y)||130,this.lattice=t.lattice||t.$_lattice||A.g,t.parameters&&(this.parameters=c.n.parseParameters(t.parameters,this.id,!1));const r=t.lattices||t.$_lattices;if(r?r.split(",").map(e=>{this.latticeArr.push(new A.z(e).setNode(this))}):this.atom||this.latticeArr.push((new A.z).setNode(this)),t.tags&&t.tags.tag?(this.tagArr=Array.isArray(t.tags.tag)?t.tags.tag:[t.tags.tag],this.tagArr.map(e=>{e.name=e.name||e.$_name,e.value=e.value||e.$_value,"type"===e.name&&(this.type=e.value)})):Object.keys(N.M6).map(e=>{-1===this.name.indexOf(e)||(this.type=e)}),t.inport&&(Array.isArray(t.inport)||(t.inport=[t.inport]),t.inport.map(e=>{e.portType=s._.TYPE_IN_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(e))})),t.outport&&(Array.isArray(t.outport)||(t.outport=[t.outport]),t.outport.map(e=>{e.portType=s._.TYPE_OUT_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(e))})),t.fnode&&(Array.isArray(t.fnode)||(t.fnode=[t.fnode]),t.fnode.map(e=>{this.addSubFlowNode(new g(this.level+1).setFlowService(this.flowService).initWithJsonData(e))})),t.fcomment&&(Array.isArray(t.fcomment)||(t.fcomment=[t.fcomment]),t.fcomment.map(e=>{this.addComment((new a.k).initWithJsonData(e))})),!t.connect&&!t.connection)return this;t.connect=t.connection||t.connect,Array.isArray(t.connect)||(t.connect=[t.connect]);for(let e of t.connect){let i=(e.from||e.$_from).split("."),o=(e.to||e.$_to).split("."),f=i[0],l=i[1],n=o[0],h=o[1],p=f===g.PARENT?this:this.getSubFlowNodeById(f),w=n===g.PARENT?this:this.getSubFlowNodeById(n);if(!p||!w)continue;let b=p.getFlowPortByName(l),x=w.getFlowPortByName(h);b.parentFlag=p===this?s._.PARENT_CONTAINER:s._.PARENT_FNODE,x.parentFlag=w===this?s._.PARENT_CONTAINER:s._.PARENT_FNODE,this.addConnection((new m.e).initWithFlowPort(b,x).initControlP(e).updateOtherInfo(e))}return this}initWithOperator(t,r=!0){if(this.id=(0,_.Vj)(),this.name=t.name||t.$_name,this.alias=t.i18nText||t.alias||t.$_alias||this.name,this.atom=(0,_.or)((0,_.or)(t.atom,t.$_atom),!0),this.replica=Number(t.replica||t.$_replica||1),("ProcessOperator"===this.name||"ProcessReference"===this.name)&&(this.atom=!1),this.resourceType=t.resourceType,this.resourceType===T.b0.PrcGraph&&(this.flowId=t.id)&&(this.flowName="ProcessReference"),r){let e,i;if(this.type=t.type,this.tagArr.push({name:"type",value:this.type}),t.inputPorts){try{e=JSON.parse(t.inputPorts)}catch(o){e=t.inputPorts}e.map(o=>{o.portType=s._.TYPE_IN_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(o))})}if(t.outputPorts){try{i=JSON.parse(t.outputPorts)}catch(o){i=t.outputPorts}i.map(o=>{o.portType=s._.TYPE_OUT_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(o))})}}else t.inport&&(!Array.isArray(t.inport)&&(t.inport=[t.inport]),t.inport.map(e=>{e.portType=s._.TYPE_IN_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(e))})),t.outport&&(!Array.isArray(t.outport)&&(t.outport=[t.outport]),t.outport.map(e=>{e.portType=s._.TYPE_OUT_PORT,this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData(e))}));return t.parameters&&(this.parameters=c.n.parseParameters(t.parameters,this.id,r)),t.lattices?t.lattices.split(",").map(e=>{this.latticeArr.push(new A.z(e).setNode(this))}):this.atom||this.latticeArr.push((new A.z).setNode(this)),this}newFlowPort(t){const r=t.parentFlag===s._.PARENT_FNODE?t.dataType:"/";if(t.portType===s._.TYPE_IN_PORT)t.extendable&&!this.inportArr.find(e=>e.numConnection<=0)&&(this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData({name:this.generateInportName(t.name),portType:s._.TYPE_IN_PORT,dataType:r,type:t.type,option:t.option,extendable:t.extendable,connectionLimit:t.connectionLimit})),this.drawPathByFlowPort());else if(t.portType===s._.TYPE_OUT_PORT){const e=t.isOut?this.outArr:this.resultArr;t.extendable&&!e.find(i=>i.numConnection<=0)&&(this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData({name:this.generateOutportName(e,t.name),portType:s._.TYPE_OUT_PORT,dataType:r,type:t.type,option:t.option,extendable:t.extendable,connectionLimit:t.connectionLimit})),this.drawPathByFlowPort())}}generateInportName(t){var r;t=null===(r=t.match(/[a-zA-Z]+/))||void 0===r?void 0:r[0];let e=1;return this.inportArr.map(i=>{let o=Number(i.name.replace(t,""));!isNaN(o)&&o>=e&&(e=o+1)}),t+e}generateOutportName(t,r){var e;r=null===(e=r.match(/[a-zA-Z]+/))||void 0===e?void 0:e[0];let i=1;return t.map(o=>{let f=Number(o.name.replace(r,""));!isNaN(f)&&f>=i&&(i=f+1)}),r+i}drawPathByFlowPort(){setTimeout(()=>{this.connectionArr&&this.connectionArr.map(t=>t.drawPath())})}addFlowPort(t){if(!t||this.mappingKNameVFlowPort[t.name])return t;switch(t.flowNode&&t.flowNode.removeFlowPort(t),t.flowNode=this,this.mappingKNameVFlowPort[t.name]=t,t.portType){case s._.TYPE_IN_PORT:this.inportArr=[...this.inportArr,t];break;case s._.TYPE_OUT_PORT:this.outportArr=[...this.outportArr,t];break;case s._.TYPE_TRIGGER_IN_PORT:this.triggerInportArr=[...this.triggerInportArr,t];break;case s._.TYPE_TRIGGER_OUT_PORT:this.triggerOutportArr=[...this.triggerOutportArr,t]}return t}removeFlowPort(t){if(!t||!this.mappingKNameVFlowPort[t.name])return t;switch(t.flowNode=null,delete this.mappingKNameVFlowPort[t.name],t.portType){case s._.TYPE_IN_PORT:this.inportArr=this.inportArr.filter((r,e)=>e!==this.inportArr.indexOf(t)),this.drawPathByFlowPort();break;case s._.TYPE_OUT_PORT:this.outportArr=this.outportArr.filter((r,e)=>e!==this.outportArr.indexOf(t)),this.drawPathByFlowPort();break;case s._.TYPE_TRIGGER_IN_PORT:this.triggerInportArr=this.triggerInportArr.filter((r,e)=>e!==this.triggerInportArr.indexOf(t));break;case s._.TYPE_TRIGGER_OUT_PORT:this.triggerOutportArr=this.triggerOutportArr.filter((r,e)=>e!==this.triggerOutportArr.indexOf(t))}return t.destroy(),t}addFlowPortByAlias(t,r=""){let e,i,o,f,l;r===s._.TYPE_IN_PORT?(e=this.inportArr,o=e[e.length-1],i=t+"In",l=s._.TYPE_IN_PORT):r===s._.TYPE_RESULT_PORT?(e=this.resultArr,o=e[e.length-1],i=t+"Out",l=s._.TYPE_OUT_PORT):(e=this.outArr,o=e[e.length-1],i=t+"Out",l=s._.TYPE_OUT_PORT),o&&(f=o.parentFlag===s._.PARENT_FNODE?o.dataType:"/",this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData({name:i,alias:t,portType:l,dataType:f,option:o.option,extendable:o.extendable,connectionLimit:o.connectionLimit})))}removeFlowPortByAlias(t,r=""){let e,i;e=r===s._.TYPE_IN_PORT?this.inportArr:r===s._.TYPE_RESULT_PORT?this.resultArr:this.outArr,i=e.find(o=>o.alias===t),i&&(i.numConnection>0&&this.parentFlowNode.connectionArr.filter(o=>o.from===i||o.to===i).map(o=>{this.parentFlowNode.removeConnection(o)}),i.breakpoint&&this.flowService.notify.notify(y.g.DeleteBreakpointWhenDeletePort,i.breakpoint),this.removeFlowPort(i))}renameFlowPort(t,r,e=""){let i,o;i=e===s._.TYPE_IN_PORT?this.inportArr:e===s._.TYPE_RESULT_PORT?this.resultArr:this.outArr,o=i.find(f=>f.alias===t),o&&(o.alias=r)}updateFlowPortByParameter(t){const r=l=>{l.map(n=>{n.numConnection>0&&this.parentFlowNode.connectionArr.filter(h=>h.from===n||h.to===n).map(h=>{this.parentFlowNode.removeConnection(h)}),n.breakpoint&&this.flowService.notify.notify(y.g.DeleteBreakpointWhenDeletePort,n.breakpoint),n.flowNode=null,delete this.mappingKNameVFlowPort[n.name],this.outportArr=this.outportArr.filter((h,p)=>p!==this.outportArr.indexOf(n)),n.destroy()})};if(!t||!t.value)return void r(this.outportArr.concat([]));const i=this.outportArr.filter(l=>t.value.find(n=>l.name===n.portName.value)),o=this.outportArr.filter(l=>-1===i.indexOf(l)),f=t.value.filter(l=>!i.find(n=>n.name===l.portName.value));r(o),(l=>{l.map(n=>{this.addFlowPort((new s._).setFlowService(this.flowService).initWithJsonData({name:n.portName.value,flowDataType:n.flowDataType.value,portType:s._.TYPE_OUT_PORT,option:!0}))})})(f)}getFlowPortByName(t){return this.mappingKNameVFlowPort[t]}addSubFlowNode(t){return!t||-1!==this.subFlowNodeArr.indexOf(t)||(t.parentFlowNode&&t.parentFlowNode.removeSubFlowNode(t),t.parentFlowNode=this,this.subFlowNodeArr=[...this.subFlowNodeArr,t]),t}removeSubFlowNode(t){return!t||-1===this.subFlowNodeArr.indexOf(t)||(t.parentFlowNode=null,this.subFlowNodeArr=this.subFlowNodeArr.filter((r,e)=>e!==this.subFlowNodeArr.indexOf(t)),t.inportArr.map(r=>{r.breakpoint&&this.flowService.notify.notify(y.g.DeleteBreakpointWhenDeletePort,r.breakpoint)}),t.outportArr.map(r=>{r.breakpoint&&this.flowService.notify.notify(y.g.DeleteBreakpointWhenDeletePort,r.breakpoint)}),t.destroy()),t}getSubFlowNodeById(t){return this.subFlowNodeArr.find(r=>r.id===t)}getFromFlowNodes(t,r=""){let o,e=this.getSubFlowNodeById(t),i=[];return e&&(o=e.inportArr.filter(f=>f.numConnection),r&&(o=o.filter(f=>0===f.dataType.indexOf(r))),o.map(f=>{this.connectionArr.map(l=>{l.to===f&&i.push(l.from.flowNode)})})),i}getToFlowNodes(t){let r=this.getSubFlowNodeById(t),e=[];return r&&r.outportArr.filter(i=>i.numConnection).map(i=>{this.connectionArr.map(o=>{o.from===i&&e.push(o.to.flowNode)})}),e}getTreeNode(){return{title:this.alias,name:this.name,key:this.id,isLeaf:!0,error:!!this.error}}getFlowTree(){let t=this.getTreeNode();return this.subFlowNodeArr.length&&(t.isLeaf=!1,t.children=[],this.subFlowNodeArr.map(r=>{t.children.push(r.getFlowTree())})),t}addConnection(t){return!t||-1!==this.connectionArr.indexOf(t)||(t.flowNode&&t.flowNode.removeConnection(t),t.flowNode=this,this.connectionArr=[...this.connectionArr,t],setTimeout(()=>{t.drawPath()}),this.updatePortDataType(t),this.updateConnectionType()),t}removeConnection(t){if(!t||-1===this.connectionArr.indexOf(t))return t;if(t.flowNode=null,t.from.numConnection--,t.from.connectionScope="",t.to.numConnection--,t.to.connectionScope="",this.connectionArr=this.connectionArr.filter((r,e)=>e!==this.connectionArr.indexOf(t)),t.from.numConnection<=0){let r=t.from.flowNode;t.from.extendable&&r.removeFlowPort(t.from),r.atom&&(t.from.flowMeta="")}if(t.to.numConnection<=0){let r=t.to.flowNode;t.to.extendable&&r.removeFlowPort(t.to),r.atom&&(t.to.flowMeta="")}return this.updatePortDataType(t),this.updateConnectionType(),t.destroy(),t}getConnection(t,r){return this.connectionArr.find(e=>e.from===t&&e.to===r||e.from===r&&e.to===t)}addComment(t){return!t||-1!==this.commentArr.indexOf(t)||(this.commentArr=[...this.commentArr,t]),t}removeComment(t){return!t||-1===this.commentArr.indexOf(t)||(this.commentArr=this.commentArr.filter((r,e)=>e!==this.commentArr.indexOf(t))),t}updateConnectionType(){this.subFlowNodeArr.map(t=>{var r;(null===(r=t.outportArr.find(e=>"pazOut"===e.name))||void 0===r?void 0:r.numConnection)?this.connectionArr.filter(e=>"pazOut"!==e.from.name&&"pazOut"!==e.to.name).filter(e=>"Def"!==e.scope).map(e=>{(e.from.flowNode===t||e.to.flowNode===t)&&(e.svgDasharray=m.e.SVG_DASHARRAY_TRIGGER1,e.scope=e.from.connectionScope=e.to.connectionScope="Def")}):t.inportArr.some(i=>"Def"===i.connectionScope)&&t.outportArr.some(i=>"Def"===i.connectionScope)&&this.connectionArr.filter(i=>"pazOut"!==i.from.name&&"pazOut"!==i.to.name).filter(i=>"Def"!==i.scope).map(i=>{(i.from.flowNode===t||i.to.flowNode===t)&&(i.svgDasharray=m.e.SVG_DASHARRAY_TRIGGER1,i.scope=i.from.connectionScope=i.to.connectionScope="Def")})})}updatePortDataType(t){this.parentFlowNode||t.from.parentFlag===s._.PARENT_FNODE&&t.to.parentFlag===s._.PARENT_FNODE||(this.inportArr.map(r=>{r.dataType="/"}),this.inportArr.filter(r=>r.numConnection>0).map(r=>{this.connectionArr.filter(i=>i.from===r).map(i=>i.to).map(i=>{r.dataType=r.dataType.length>i.dataType.length?r.dataType:i.dataType})}),this.outportArr.map(r=>{r.dataType="/"}),this.outportArr.filter(r=>r.numConnection>0).map(r=>{const e=this.connectionArr.filter(i=>i.to===r).map(i=>i.from);1===e.length?r.dataType=e[0].dataType:e.map(i=>{r.dataType=r.dataType.length>i.dataType.length?i.dataType:r.dataType})}))}}return g.PARENT="parent",g.P_Color="#2a8b92",g.Bg_Color="#fbffff",g.Selected_Color="#d9fbfd",g})()}}]);